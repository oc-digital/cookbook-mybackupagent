#
# Generated by Chef for <%= node['fqdn'] %>.
# Local modifications will be overwritten.
#

upstream unicorn {
  server unix:/tmp/unicorn.<%= node['mybackupagent']['app_name'] %>.sock fail_timeout=0;
}

server {
  server_name www.<%= node['mybackupagent']['app_name'] %>.com;
  return 301 $scheme://<%= node['mybackupagent']['app_name'] %>.com$request_uri;
}

server {
  listen 80 default deferred;
  server_name <%= node['mybackupagent']['app_name'] %>.com;
  root <%= @app_path %>/current/public;
  access_log  <%= @app_path %>/shared/log/access.log;
  error_log   <%= @app_path %>/shared/log/access.log error;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn;
  }

  error_page 500 502 503 504 /500.html;
  keepalive_timeout 5;
}

# server {
#   listen      80;
#   server_name www.mybackupagent.com;
#   expires     max;
#   add_header Strict-Transport-Security "max-age=315360000; includeSubdomains";
#   rewrite ^ https://mybackupagent.com$request_uri permanent;
# }

# server {
#   listen 443;
#   #listen      127.0.0.1:443 sndbuf=128k;
#   add_header Strict-Transport-Security "max-age=315360000; includeSubdomains";
#   access_log  <%= @app_path %>/shared/log/access.log;
#   error_log   <%= @app_path %>/shared/log/access.log error;
#   expires     off;
#   root <%= @app_path %>/current/public;
#   server_name mybackupagent.com www.mybackupagent.com;

#   ## SSL
#   ssl on;
#   ssl_certificate /etc/ssl/certs/<%= node['mybackupagent']['app_name'] %>.crt;
#   ssl_certificate_key /etc/ssl/private/server.key;
#   ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;
#   #ssl_engine aesni;
#   ssl_prefer_server_ciphers on;
#   ssl_protocols SSLv3 TLSv1;
#   #ssl_session_timeout 5m;
#   #ssl_dhparam /ssl_keys/diffie_helman.pem;
#   #ssl_session_cache shared:SSL:10m;
#   #ssl_ecdh_curve secp521r1;

#   ## Size Limits
#   #client_body_buffer_size   8k;
#   #client_header_buffer_size 1k;
#   client_max_body_size      4G;
#   #large_client_header_buffers 4 4k/8k;

#   ## Timeouts
#   #client_body_timeout     60;
#   #client_header_timeout   60;
#   keepalive_timeout        10;
#   #send_timeout            60;

#   ## General Options
#   charset                 utf-8;

#   ## Compression
#   gzip                 on;
#   gzip_static          on;
#   #gzip_buffers      16 8k;
#   #gzip_http_version   1.0;
#   #gzip_comp_level       1;
#   #gzip_min_length     100;
#   #gzip_types        text/plain text/html text/css image/x-icon image/gif;
#   gzip_vary            on;

#   ## OCSP Stapling allows the presenter of a certificate (our server) to bear the resource cost involved
#   ## in providing OCSP responses, instead of the issuing Certificate Authority (CA). This options adds
#   ## very minimal load to our server, but can offer lower load times to our remote users.
#   # ssl_stapling on;
#   # resolver 8.8.8.8;
#   # ssl_stapling_file /ssl_keys/mybackupagent.com_staple;
#   # ssl_stapling_verify on;

#   ## Note: if{} sections are expensive to process. Please only use them if you need them
#   ## and take a look lower down on the page for our discussion of if{} statements.

#   ## Only allow GET and HEAD request methods. By default Nginx blocks
#   ## all requests type other then GET and HEAD for static content.
#   # if ($request_method !~ ^(GET|HEAD)$ ) {
#   #   return 405;
#   # }

#   ## Deny illegal Host headers.
#   # if ($host !~* ^(mybackupagent.com|www.mybackupagent.com)$ ) {
#   #  return 405;
#   # }

#   ## Deny certain User-Agents (case insensitive)
#   ## The ~* makes it case insensitive as opposed to just a ~
#   # if ($http_user_agent ~* (Baiduspider|Jullo) ) {
#   #  return 405;
#   # }

#   ## Deny certain Referers (case insensitive)
#   ## The ~* makes it case insensitive as opposed to just a ~
#   # if ($http_referer ~* (babes|click|diamond|forsale|girl|jewelry|love|nudit|organic|poker|porn|poweroversoftware|sex|teen|video|webcam|zippo) ) {
#   #  return 405;
#   # }

#   ## Redirect from www to non-www
#   if ($host = 'www.mybackupagent.com' ) {
#     rewrite  ^/(.*)$  http://mybackupagent.com/$1  permanent;
#   }

#   ## Stop Image and Document Hijacking
#   # location ~* (\.jpg|\.gif|\.png|mybackupagent\.css)$ {
#   #   if ($http_referer !~ ^(https://mybackupagent.com) ) {
#   #     return 404;
#   #   }
#   # }

#   ## Contact page access restricted to mybackupagent.com referer. You may want to
#   ## restrict access to a page to only those clients who clicked on the link from
#   ## your site. A common setup is to only allow access to your contacts page if the
#   ## user came from a link on one of your pages. This may stop some spam.
#   # location ~* contact_us\.html {
#   #    if ($http_referer !~ ^(https://mybackupagent.com) ) {
#   #       return 403;
#   #    }
#   # }

#   ## Restricted Access directory with password in access_list
#   # location ^~ /secure/ {
#   #       allow 127.0.0.1/32;
#   #       allow 10.10.10.0/24;
#   #       deny all;
#   #       auth_basic "RESTRICTED ACCESS";
#   #       auth_basic_user_file /var/www/htdocs/secure/access_list;
#   #   }

#   location ^~ /assets/ {
#     gzip_static on;
#     expires 1y;
#     add_header Cache-Control public;
#     add_header ETag "";
#     break;
#   }

#   location ^~ /uploads/ {
#     gzip          on;
#     gzip_static   on;
#     # expires max;
#     # add_header Cache-Control public;
#   }

#   # This block will catch static file requests, such as images, css, js
#   # The ?: prefix is a 'non-capturing' mark, meaning we do not require
#   # the pattern to be captured into $1 which should help improve performance
#   # location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
#   #   # Some basic cache-control for static files to be sent to the browser
#   #   gzip          on;
#   #   gzip_static   on;
#   #   expires max;
#   #   add_header Pragma public;
#   #   add_header Cache-Control "public, must-revalidate, proxy-revalidate";
#   # }

#   try_files $uri/index.html $uri @unicorn;
#   location @unicorn {
#     proxy_set_header Host $host;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto https;
#     proxy_redirect off;
#     proxy_pass http://unicorn;
#   }

#   ## All server errors get the generic error page
#   error_page 500 502 503 504 /500.html;
# }
