#
# Generated by Chef for <%= node['fqdn'] %>.
# Local modifications will be overwritten.
#

working_directory "<%= @app_path %>/current"
pid "<%= @app_path %>/current/tmp/pids/unicorn.pid"
stderr_path "<%= @app_path %>/shared/log/unicorn.log"
stdout_path "<%= @app_path %>/shared/log/unicorn.log"

listen "/tmp/unicorn.<%= node['mybackupagent']['app_name'] %>.sock"
worker_processes <%= node['mybackupagent']['unicorn_workers'] %>
timeout 30

preload_app true

before_fork do |server, worker|
  # the following is highly recomended for Rails + "preload_app true"
  # as there's no need for the master process to hold a connection
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.connection.disconnect!

  # Quit the old unicorn process
  old_pid = "<%= @app_path %>/current/tmp/pids/unicorn.pid.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
      # someone else did our job for us
    end
  end
end

after_fork do |server, worker|
  # per-process listener ports for debugging/admin/migrations
  # addr = "127.0.0.1:#{9293 + worker.nr}"
  # server.listen(addr, :tries => -1, :delay => 5, :tcp_nopush => true)

  # the following is *required* for Rails + "preload_app true",
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection

  # if preload_app is true, then you may also want to check and
  # restart any other shared sockets/descriptors such as Memcached,
  # and Redis.  TokyoCabinet file handles are safe to reuse
  # between any number of forked children (assuming your kernel
  # correctly implements pread()/pwrite() system calls)
end